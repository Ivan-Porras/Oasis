
// De esta clase herdaria cada sensor 

class Sensor{

	public: 

	//~Inicializadores
	Sensor(void); 
	Sensor(int num_parcela); 
	Sensor(Sensor sensor); 

	//~Funciones Basicas 
	// Mide nuevo valor y actualiza varible de instancia valor_medido y contador
	void actualizar_valor(int new_value);  
	void reset_contador(){contador = 0;}
	
	//~Getters
	float get_valor(){return valor_medido;} 
	int get_contador(){return contador;}
	int get_ident_parcela(){return identificador_parcela;} 

	private: // O protected segun preferencia
 
	float valor_medido = 0; 
	int contador = 0; // Valores medidos desde arranque  
	int identificador_parcela = 0;  // Numero de la parcela en la que se encuentra
	bool estado = True; // True --> endendido, False --> apagado 
	
	static const int MAX_PARCELAS = 4; // Para tratar errores 
}

class Humedad: public Sensor{
	
	
	public: 
	// Toma el valor utilizando el sensor y lo pasa como parametro al metodo
	//  actualizar_valor(valor);
	void obtener_valor();
	  

	
	private: 

}



